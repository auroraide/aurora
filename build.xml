<project name="Aurora" default="devmode" xmlns:ivy="antlib:org.apache.ivy.ant">
    
    <!-- Arguments to gwtc and devmode targets -->
    <property name="gwt.args" value="" />

    <!-- some variables used -->
    <property name="lib.dir" value="lib" />
    <property name="build.dir" value="build" />
    <property name="src.dir" value="src" />
    
    <!-- Configure path to GWT SDK -->
    <property name="gwt.sdk" location="../gwt-2.8.2"/>
    
    <!-- paths used for compilation and run  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
	</path>
    <path id="run.path.id">
        <path refid="lib.path.id" />
        <path location="${build.dir}" />
    </path>

    <path id="project.class.path">
        <pathelement location="war/WEB-INF/classes"/>
        <pathelement location="${gwt.sdk}/gwt-user.jar"/>
        <pathelement location="${gwt.sdk}/gwt-dev.jar"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar"/>
        <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar"/>
        <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) here -->
        <pathelement location="../gwt-2.8.2/gwt-codeserver.jar"/>
        <pathelement location="lib/geomajas-project-codemirror-gwt-3.1.3.jar"/>
    </path>

    <!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="resolve" description="--> retreive dependencies with ivy">
        <ivy:retrieve/>
    </target>    

    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>

    <!-- ================================= 
          target: run
         ================================= -->
    <target name="run" depends="resolve" description="--> compile and run the project">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false"/>
    	<property name="msg" value="hello ivy !"/>
    </target>

   <!-- ===================================
         target: libs
        =================================== -->
    <target name="libs" depends="run" description="Copy libs to WEB-INF/lib">
        <mkdir dir="war/WEB-INF/lib" />
        <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
        <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
        <!-- Add any additional server libs that need to be copied -->
    </target>
    
    <!-- ================================= 
          target: javac              
         ================================= -->
    <target name="javac" depends="libs" description="Compile java source to bytecode">
        <mkdir dir="war/WEB-INF/classes"/>
        <javac srcdir="src" includes="**" encoding="utf-8"
            destdir="war/WEB-INF/classes"
            source="1.8" target="1.8" nowarn="true"
            debug="true" debuglevel="lines,vars,source">
            <classpath refid="project.class.path"/>
        </javac>
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src" excludes="**/*.java"/>
        </copy>
    </target>
    
    <!-- ================================= 
          target: gwtc              
         ================================= -->
    <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" maxmemory="512m">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
            </classpath>
            <arg line="-war"/>
            <arg value="war"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg line="${gwt.args}"/>
            <arg value="aurora.Aurora"/>
        </java>
    </target>
    
    <!-- ================================= 
          target: devmode              
         ================================= -->
    <target name="devmode" depends="javac" description="Run development mode (pass -Dgwt.args=-nosuperDevMode to fallback to classic DevMode)">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode" maxmemory="1g">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <pathelement location="${gwt.sdk}/gwt-codeserver.jar"/>
            </classpath>
            <arg value="-startupUrl"/>
            <arg value="Aurora.html"/>
            <arg line="-war"/>
            <arg value="war"/>
            <!-- Additional arguments like -style PRETTY, -logLevel DEBUG or -nosuperDevMode -->
            <arg line="${gwt.args}"/>
            <arg value="aurora.Aurora"/>
            <arg value="aurora.Aurora"/>
        </java>
    </target>
   
    <!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="gwtc" description="Build this project" />

    <!-- ================================= 
          target: war              
         ================================= -->
    <target name="war" depends="build" description="Create a war file">
        <zip destfile="Aurora.war" basedir="war"/>
    </target>
   
    <!-- ================================= 
          target: clean              
         ================================= -->	
    <target name="clean" description="Cleans this project">
        <delete dir="war/WEB-INF/classes" failonerror="false" />
        <delete dir="war/aurora" failonerror="false" />
    </target>

    <!-- ================================= 
          target: clean-cache              
         ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
        <ivy:cleancache />
	</target>
</project>

